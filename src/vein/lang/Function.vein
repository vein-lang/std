#space "vein/lang"

[alias("function")]
public class Function : Object
{
    // Target Object
    internal target: raw;
    // Method Ref
    internal method: raw;
    // Method Name
    public name: string { get; private set; }

    internal new() { } // internal ctor

    public call(): object
        |> self._call(this, Array.empty);
    public call(args: Array): object
        |> self._call(this, args);

    public static createFunctionFrom(target: object, name: string): Function
        |> self._createFn(target, name, false, true);
    public static createFunctionFrom(target: object, name: string, ignoreCase: boolean): Function
        |> self._createFn(target, name, ignoreCase, true);
    public static createFunctionFrom(target: object, name: string, ignoreCase: boolean, throwWhenFailBind: boolean): Function
        |> self._createFn(target, name, ignoreCase, throwWhenFailBind);

    [native("i_call_Function_call")]
    private static extern _call(f: Function, args: Array): object;
    [native("i_call_Function_create")]
    private static extern _createFn(target: object, name: string, ignoreCase: boolean, throwWhenFailBind: boolean): Function;
}